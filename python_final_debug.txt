=== Python PlantVIT Inference Test (DEBUG MODE) ===
Loading trained weights from 'plantvit_tomato.pth'...
Weights loaded successfully!

======================================================================
Testing: test_tomato.jpg
======================================================================
Loading image: test_tomato.jpg
Original image: 256x256 with 3 channels
Resized to: 256x256
Final tensor shape: torch.Size([1, 3, 256, 256])

=== üêç PYTHON STEP-BY-STEP DEBUG: test_tomato.jpg ===

--- STEP 1: Patch Extraction ---

=== üîç DETAILED PATCH EXTRACTION ANALYSIS ===
Original image shape: torch.Size([1, 3, 256, 256]) (n=1, c=3, h=256, w=256)
After first transpose (2,3): torch.Size([1, 3, 256, 256])
After second transpose (1,3): torch.Size([1, 256, 256, 3])
transposed2[0, 0, 0, :] (first pixel all channels): [0.501960813999176, 0.4745098054409027, 0.48627451062202454]
transposed2[0, 0, 1, :] (second pixel all channels): [0.37254902720451355, 0.3450980484485626, 0.35686275362968445]
After reshape: torch.Size([1, 64, 3072])
patch_area = 1024
h*w // patch_area = 64
patch_area * c = 3072

--- PATCH ORDER ANALYSIS ---
patch_height=32, patch_width=32
patches_per_row=8, patches_per_col=8

--- FIRST PATCH FORMATION ---
First patch from 2D extraction shape: torch.Size([32, 32, 3])
First patch flattened shape: torch.Size([3072])
First 10 values from manual extraction: [0.501960813999176, 0.4745098054409027, 0.48627451062202454, 0.37254902720451355, 0.3450980484485626, 0.35686275362968445, 0.5411764979362488, 0.5137255191802979, 0.5254902243614197, 0.41960784792900085]
First 10 values from patches[0,0]: [0.501960813999176, 0.4745098054409027, 0.48627451062202454, 0.37254902720451355, 0.3450980484485626, 0.35686275362968445, 0.5411764979362488, 0.5137255191802979, 0.5254902243614197, 0.41960784792900085]
Are they equal? False

--- PATCH STATISTICS ---
Patch 0: mean=0.429731, std=0.047822
Patch 1: mean=0.432221, std=0.046506
Patch 2: mean=0.435398, std=0.045194
Patch 3: mean=0.436069, std=0.048063
Patch 4: mean=0.445184, std=0.049999
Patches shape: torch.Size([1, 64, 3072])
First patch first 10 values: [0.501960813999176, 0.4745098054409027, 0.48627451062202454, 0.37254902720451355, 0.3450980484485626, 0.35686275362968445, 0.5411764979362488, 0.5137255191802979, 0.5254902243614197, 0.41960784792900085]
First patch stats: mean=0.429731, std=0.047822

--- STEP 2: Patch Embedding ---
Patch embedding shape: torch.Size([1, 64, 32])
First token first 10 values: [1.1904375553131104, -0.6160908937454224, -0.08931325376033783, 0.5899856686592102, 2.3247275352478027, 0.939041256904602, 1.0560325384140015, -0.025738928467035294, 0.7228395938873291, -0.63936448097229]
First token stats: mean=-0.000323, std=1.045540

--- STEP 3: Add CLS Token ---
After CLS token shape: torch.Size([1, 65, 32])
CLS token first 10 values: [-0.8476605415344238, -0.9102793335914612, 0.010621855966746807, 0.3068668842315674, -1.2101185321807861, 0.48504015803337097, -0.6238773465156555, 2.1299827098846436, -2.2571628093719482, -0.8763730525970459]
CLS token stats: mean=-0.245228, std=0.976450

--- STEP 4: Add Position Embedding ---
After position embedding shape: torch.Size([1, 65, 32])
CLS token after pos_embed first 10 values: [-1.4734599590301514, -0.42274531722068787, 1.4879772663116455, -0.5858350992202759, 1.406947135925293, -0.13538601994514465, -1.0565612316131592, 3.2556281089782715, -2.547652244567871, -0.7939416170120239]
CLS token after pos_embed stats: mean=-0.238550, std=1.345595
First patch token after pos_embed first 10 values: [2.0321269035339355, -1.1813514232635498, -2.4568004608154297, -1.1794352531433105, 2.460333824157715, 0.7254071235656738, -0.01576554775238037, 0.2559303641319275, 0.7153321504592896, -1.1563054323196411]

--- STEP 5: Transformer Blocks ---

  Block 0:
        === PYTHON ATTENTION DEBUG ===
        Input CLS first 10: [-1.4734599590301514, -0.42274531722068787, 1.4879772663116455, -0.5858350992202759, 1.406947135925293, -0.13538601994514465, -1.0565612316131592, 3.2556281089782715, -2.547652244567871, -0.7939416170120239]
        After LayerNorm CLS first 10: [-0.9766771197319031, -0.15654444694519043, 1.3999269008636475, -0.25944486260414124, 1.3025281429290771, 0.08013129979372025, -0.6068253517150879, 2.745539665222168, -1.8095852136611938, -0.4473685026168823]
        QKV CLS first 10: [0.5505863428115845, 2.5256636142730713, -0.8598121404647827, -0.6321845054626465, 0.05561814457178116, -1.5516530275344849, -1.0595276355743408, -0.5641108155250549, -0.11039348691701889, 1.5616015195846558]
        Q CLS first 10: [0.5505863428115845, 2.5256636142730713, -0.8598121404647827, -0.6321845054626465, 0.05561814457178116, -1.5516530275344849, -1.0595276355743408, -0.5641108155250549, -0.11039348691701889, 1.5616015195846558]
        K CLS first 10: [-0.8931981325149536, 0.28710243105888367, -0.3310922086238861, -0.45430731773376465, 0.8947582244873047, 0.4694552421569824, 0.3237907886505127, 1.1216332912445068, -0.09730358421802521, -0.8438069820404053]
        V CLS first 10: [0.023785270750522614, 0.7467209696769714, 0.9151691794395447, 0.7416946887969971, -0.6279817223548889, 0.40919801592826843, 0.017638837918639183, 0.6826308965682983, 0.7429947853088379, 0.17608435451984406]
        Q shape after head split: torch.Size([1, 3, 65, 32])
        Q head 0 CLS first 10: [0.5505863428115845, 2.5256636142730713, -0.8598121404647827, -0.6321845054626465, 0.05561814457178116, -1.5516530275344849, -1.0595276355743408, -0.5641108155250549, -0.11039348691701889, 1.5616015195846558]
        Q head 1 CLS first 10: [-0.48225605487823486, 0.7907488346099854, -0.643132746219635, -0.28451117873191833, 0.6085975766181946, -0.141214057803154, -2.399740219116211, 0.7663193345069885, 1.9123547077178955, -0.5469587445259094]
        Q head 2 CLS first 10: [0.36866405606269836, -1.3782745599746704, -1.016603946685791, 1.0958703756332397, -1.1602648496627808, -0.772549569606781, -0.15209034085273743, 1.6998203992843628, 0.7172251343727112, 1.0805412530899048]
        Attention scores shape: torch.Size([1, 3, 65, 65])
        Scale factor: 0.1767766952966369
        First attention score [CLS,CLS] for head 0: -1.0862970352172852
        After softmax [CLS,CLS] for head 0: 0.001901402953080833
        After attention*V head 0 CLS first 10: [-0.7778059244155884, 0.719430685043335, 0.4453212320804596, 0.1600632220506668, -0.6333561539649963, -0.6551758050918579, -0.168159618973732, -0.4020221531391144, -0.2574753165245056, -0.020425109192728996]
        Multi-head concat CLS first 10: [-0.7778059244155884, 0.719430685043335, 0.4453212320804596, 0.1600632220506668, -0.6333561539649963, -0.6551758050918579, -0.168159618973732, -0.4020221531391144, -0.2574753165245056, -0.020425109192728996]
        Proj weight first 10: [-0.04745975509285927, -0.09558157622814178, -0.018650641664862633, -0.03574654459953308, 0.089387908577919, -0.027249548584222794, -0.01995662786066532, -0.09480144828557968, 0.07403241097927094, -0.001294212881475687]
        Proj bias first 10: [0.09574120491743088, 0.01607155054807663, -0.05273159220814705, 0.07886721193790436, 0.007529219146817923, -0.024774473160505295, 0.09995734691619873, -0.013119366951286793, -0.07762917876243591, 0.06687488406896591]
        Final projection CLS first 10: [0.18887454271316528, 0.6877384781837463, -1.2522169351577759, 0.34519103169441223, -0.1311831921339035, 0.2018636167049408, 0.30704110860824585, -0.8112726807594299, 0.2614477872848511, -0.16451595723628998]
    After attention: CLS first 10 = [-1.2845854759216309, 0.26499316096305847, 0.23576033115386963, -0.24064406752586365, 1.275763988494873, 0.06647759675979614, -0.7495201230049133, 2.4443554878234863, -2.2862043380737305, -0.9584575891494751]
    After attention: CLS stats = mean=-0.277566, std=1.071699
    After feedforward: CLS first 10 = [-0.7690499424934387, -0.3410980999469757, -0.25540199875831604, -0.7413899898529053, 1.1077356338500977, 0.24666793644428253, -0.4079885482788086, 2.180759906768799, -1.7689520120620728, -1.0733070373535156]
    After feedforward: CLS stats = mean=-0.224498, std=0.889197

  Block 1:
    After attention: CLS first 10 = [-1.0408995151519775, -0.28535187244415283, -0.24993523955345154, -0.17950236797332764, 0.8713253140449524, 0.17434144020080566, -0.3158811330795288, 0.8691524267196655, -0.9605028629302979, -1.2210386991500854]
    After attention: CLS stats = mean=-0.241375, std=0.592055
    After feedforward: CLS first 10 = [-1.0767043828964233, -0.5585343241691589, -0.29797008633613586, 0.2981618344783783, 0.7891656756401062, 0.09529384225606918, -0.07085508108139038, 0.6033865809440613, -0.8339441418647766, -0.7398484945297241]
    After feedforward: CLS stats = mean=-0.233613, std=0.549726

  Block 2:
    After attention: CLS first 10 = [-0.2533224821090698, -0.23868650197982788, -0.8125253915786743, 0.2969452142715454, 0.5518205165863037, -0.32422617077827454, -0.0781778022646904, -0.4570268988609314, -0.2766398787498474, -1.0255321264266968]
    After attention: CLS stats = mean=-0.262478, std=0.465610
    After feedforward: CLS first 10 = [-0.41644495725631714, -0.19860026240348816, -0.9624735713005066, -0.13512352108955383, 0.5235894322395325, -0.4013035297393799, 0.19822752475738525, -0.549994707107544, -0.7295693159103394, -0.7066954374313354]
    After feedforward: CLS stats = mean=-0.289403, std=0.462964

--- STEP 6: Final Layer Norm ---
After final norm: CLS first 10 = [-0.2899969220161438, 0.17265865206718445, -1.5786688327789307, 0.3897041082382202, 1.9186246395111084, -0.27628040313720703, 1.2205122709274292, -0.5745836496353149, -1.0398356914520264, -1.0126250982284546]
After final norm: CLS stats = mean=-0.000121, std=1.118127

--- STEP 7: Classification Head ---
Final logits: [-1.2523077726364136, 0.12826360762119293, 0.2662959098815918, 1.9447180032730103, 3.0463738441467285, 1.5453490018844604, -1.6701533794403076, -0.5242135524749756, 0.6068583726882935, -1.1756501197814941]
Logits stats: mean=0.291553, std=1.530093

=== Python Final Results ===
  Bacterial_spot: -1.252308
  Early_blight: 0.128264
  Healthy: 0.266296
  Late_blight: 1.944718
  Leaf_mold: 3.046374
  Septoria_leaf_spot: 1.545349
  Spider_mites: -1.670153
  Target_spot: -0.524214
  Tomato_mosaic_virus: 0.606858
  Yellow_leaf_curl_virus: -1.175650

üå± PYTHON DIAGNOSIS RESULT üå±
Predicted Disease: Leaf_mold
Confidence Score: 3.046374

======================================================================
Testing: test_tomato_2.jpg
======================================================================
Loading image: test_tomato_2.jpg
Original image: 256x256 with 3 channels
Resized to: 256x256
Final tensor shape: torch.Size([1, 3, 256, 256])

=== üêç PYTHON STEP-BY-STEP DEBUG: test_tomato_2.jpg ===

--- STEP 1: Patch Extraction ---

=== üîç DETAILED PATCH EXTRACTION ANALYSIS ===
Original image shape: torch.Size([1, 3, 256, 256]) (n=1, c=3, h=256, w=256)
After first transpose (2,3): torch.Size([1, 3, 256, 256])
After second transpose (1,3): torch.Size([1, 256, 256, 3])
transposed2[0, 0, 0, :] (first pixel all channels): [0.6039215922355652, 0.6039215922355652, 0.658823549747467]
transposed2[0, 0, 1, :] (second pixel all channels): [0.6078431606292725, 0.6078431606292725, 0.6627451181411743]
After reshape: torch.Size([1, 64, 3072])
patch_area = 1024
h*w // patch_area = 64
patch_area * c = 3072

--- PATCH ORDER ANALYSIS ---
patch_height=32, patch_width=32
patches_per_row=8, patches_per_col=8

--- FIRST PATCH FORMATION ---
First patch from 2D extraction shape: torch.Size([32, 32, 3])
First patch flattened shape: torch.Size([3072])
First 10 values from manual extraction: [0.6039215922355652, 0.6039215922355652, 0.658823549747467, 0.6078431606292725, 0.6078431606292725, 0.6627451181411743, 0.5215686559677124, 0.5215686559677124, 0.5764706134796143, 0.5843137502670288]
First 10 values from patches[0,0]: [0.6039215922355652, 0.6039215922355652, 0.658823549747467, 0.6078431606292725, 0.6078431606292725, 0.6627451181411743, 0.5215686559677124, 0.5215686559677124, 0.5764706134796143, 0.5843137502670288]
Are they equal? False

--- PATCH STATISTICS ---
Patch 0: mean=0.634887, std=0.048931
Patch 1: mean=0.630395, std=0.053639
Patch 2: mean=0.627254, std=0.054690
Patch 3: mean=0.626809, std=0.063330
Patch 4: mean=0.622109, std=0.080726
Patches shape: torch.Size([1, 64, 3072])
First patch first 10 values: [0.6039215922355652, 0.6039215922355652, 0.658823549747467, 0.6078431606292725, 0.6078431606292725, 0.6627451181411743, 0.5215686559677124, 0.5215686559677124, 0.5764706134796143, 0.5843137502670288]
First patch stats: mean=0.634887, std=0.048931

--- STEP 2: Patch Embedding ---
Patch embedding shape: torch.Size([1, 64, 32])
First token first 10 values: [0.3041897714138031, 0.7059988975524902, -1.5037564039230347, 1.5570135116577148, 0.12549276649951935, 1.502363920211792, 2.044797897338867, -1.0064606666564941, -1.8353959321975708, -0.9877191781997681]
First token stats: mean=-0.001534, std=1.045181

--- STEP 3: Add CLS Token ---
After CLS token shape: torch.Size([1, 65, 32])
CLS token first 10 values: [-0.8476605415344238, -0.9102793335914612, 0.010621855966746807, 0.3068668842315674, -1.2101185321807861, 0.48504015803337097, -0.6238773465156555, 2.1299827098846436, -2.2571628093719482, -0.8763730525970459]
CLS token stats: mean=-0.245228, std=0.976450

--- STEP 4: Add Position Embedding ---
After position embedding shape: torch.Size([1, 65, 32])
CLS token after pos_embed first 10 values: [-1.4734599590301514, -0.42274531722068787, 1.4879772663116455, -0.5858350992202759, 1.406947135925293, -0.13538601994514465, -1.0565612316131592, 3.2556281089782715, -2.547652244567871, -0.7939416170120239]
CLS token after pos_embed stats: mean=-0.238550, std=1.345595
First patch token after pos_embed first 10 values: [1.1458791494369507, 0.14073830842971802, -3.871243476867676, -0.21240735054016113, 0.2610991597175598, 1.2887297868728638, 0.9729998111724854, -0.724791407585144, -1.8429033756256104, -1.5046601295471191]

--- STEP 5: Transformer Blocks ---

  Block 0:
        === PYTHON ATTENTION DEBUG ===
        Input CLS first 10: [-1.4734599590301514, -0.42274531722068787, 1.4879772663116455, -0.5858350992202759, 1.406947135925293, -0.13538601994514465, -1.0565612316131592, 3.2556281089782715, -2.547652244567871, -0.7939416170120239]
        After LayerNorm CLS first 10: [-0.9766771197319031, -0.15654444694519043, 1.3999269008636475, -0.25944486260414124, 1.3025281429290771, 0.08013129979372025, -0.6068253517150879, 2.745539665222168, -1.8095852136611938, -0.4473685026168823]
        QKV CLS first 10: [0.5505863428115845, 2.5256636142730713, -0.8598121404647827, -0.6321845054626465, 0.05561814457178116, -1.5516530275344849, -1.0595276355743408, -0.5641108155250549, -0.11039348691701889, 1.5616015195846558]
        Q CLS first 10: [0.5505863428115845, 2.5256636142730713, -0.8598121404647827, -0.6321845054626465, 0.05561814457178116, -1.5516530275344849, -1.0595276355743408, -0.5641108155250549, -0.11039348691701889, 1.5616015195846558]
        K CLS first 10: [-0.8931981325149536, 0.28710243105888367, -0.3310922086238861, -0.45430731773376465, 0.8947582244873047, 0.4694552421569824, 0.3237907886505127, 1.1216332912445068, -0.09730358421802521, -0.8438069820404053]
        V CLS first 10: [0.023785270750522614, 0.7467209696769714, 0.9151691794395447, 0.7416946887969971, -0.6279817223548889, 0.40919801592826843, 0.017638837918639183, 0.6826308965682983, 0.7429947853088379, 0.17608435451984406]
        Q shape after head split: torch.Size([1, 3, 65, 32])
        Q head 0 CLS first 10: [0.5505863428115845, 2.5256636142730713, -0.8598121404647827, -0.6321845054626465, 0.05561814457178116, -1.5516530275344849, -1.0595276355743408, -0.5641108155250549, -0.11039348691701889, 1.5616015195846558]
        Q head 1 CLS first 10: [-0.48225605487823486, 0.7907488346099854, -0.643132746219635, -0.28451117873191833, 0.6085975766181946, -0.141214057803154, -2.399740219116211, 0.7663193345069885, 1.9123547077178955, -0.5469587445259094]
        Q head 2 CLS first 10: [0.36866405606269836, -1.3782745599746704, -1.016603946685791, 1.0958703756332397, -1.1602648496627808, -0.772549569606781, -0.15209034085273743, 1.6998203992843628, 0.7172251343727112, 1.0805412530899048]
        Attention scores shape: torch.Size([1, 3, 65, 65])
        Scale factor: 0.1767766952966369
        First attention score [CLS,CLS] for head 0: -1.0862970352172852
        After softmax [CLS,CLS] for head 0: 0.00015815612277947366
        After attention*V head 0 CLS first 10: [-0.39917680621147156, 0.008855974301695824, -0.36831197142601013, 0.05618546903133392, -0.2436194270849228, -0.6448310017585754, -0.010095635429024696, -0.97320157289505, -0.34958818554878235, -0.07148914784193039]
        Multi-head concat CLS first 10: [-0.39917680621147156, 0.008855974301695824, -0.36831197142601013, 0.05618546903133392, -0.2436194270849228, -0.6448310017585754, -0.010095635429024696, -0.97320157289505, -0.34958818554878235, -0.07148914784193039]
        Proj weight first 10: [-0.04745975509285927, -0.09558157622814178, -0.018650641664862633, -0.03574654459953308, 0.089387908577919, -0.027249548584222794, -0.01995662786066532, -0.09480144828557968, 0.07403241097927094, -0.001294212881475687]
        Proj bias first 10: [0.09574120491743088, 0.01607155054807663, -0.05273159220814705, 0.07886721193790436, 0.007529219146817923, -0.024774473160505295, 0.09995734691619873, -0.013119366951286793, -0.07762917876243591, 0.06687488406896591]
        Final projection CLS first 10: [0.07970709353685379, 0.10035350918769836, -0.8154311776161194, 0.4675387442111969, -0.034403327852487564, -0.27691519260406494, 0.23747210204601288, -1.1956053972244263, 0.5196300745010376, 0.38186436891555786]
    After attention: CLS first 10 = [-1.3937528133392334, -0.3223918080329895, 0.6725460886955261, -0.11829635500907898, 1.3725438117980957, -0.4123012125492096, -0.8190891146659851, 2.0600228309631348, -2.028022289276123, -0.41207724809646606]
    After attention: CLS stats = mean=-0.239319, std=0.957374
    After feedforward: CLS first 10 = [-0.9398905634880066, -1.1717627048492432, 0.09119993448257446, -0.7499178647994995, 1.2016751766204834, -0.3015497624874115, -0.3689923882484436, 1.769370436668396, -1.4595249891281128, -0.6373380422592163]
    After feedforward: CLS stats = mean=-0.177959, std=0.794381

  Block 1:
    After attention: CLS first 10 = [-0.8744370341300964, -0.8402988314628601, 0.29344040155410767, -0.3565572202205658, 0.39165860414505005, 0.004893451929092407, -0.14848782122135162, 0.5674542188644409, -0.8324081897735596, -0.8284802436828613]
    After attention: CLS stats = mean=-0.157448, std=0.473256
    After feedforward: CLS first 10 = [-0.8840357661247253, -1.1233494281768799, 0.2076968550682068, 0.09798911213874817, 0.46319809556007385, 0.14579832553863525, -0.0975562334060669, 0.3222406804561615, -0.9244426488876343, -0.264141321182251]
    After feedforward: CLS stats = mean=-0.148309, std=0.428735

  Block 2:
    After attention: CLS first 10 = [-0.35568684339523315, -0.44412142038345337, 0.2860545516014099, 0.12034673243761063, -0.032558590173721313, -0.09500142931938171, 0.09427371621131897, 0.22275257110595703, -0.3853236436843872, -0.3158606290817261]
    After attention: CLS stats = mean=-0.094320, std=0.329206
    After feedforward: CLS first 10 = [-0.21850375831127167, -0.20833997428417206, 0.19353720545768738, 0.02683468908071518, -0.18484149873256683, -0.03460932895541191, -0.024498306214809418, 0.12912976741790771, -0.2862824499607086, -0.19280463457107544]
    After feedforward: CLS stats = mean=-0.144603, std=0.315968

--- STEP 6: Final Layer Norm ---
After final norm: CLS first 10 = [-0.24531689286231995, -0.2811364531517029, 1.1341331005096436, 0.6208837032318115, -0.12123213708400726, 0.3677229881286621, 0.46326327323913574, 0.9319494962692261, -0.4877864122390747, -0.15583568811416626]
After final norm: CLS stats = mean=0.005564, std=1.112973

--- STEP 7: Classification Head ---
Final logits: [-0.33127257227897644, -1.0356786251068115, -1.9912896156311035, -0.4694138765335083, 0.8153560757637024, 0.8342372179031372, 1.8847081661224365, -1.0221260786056519, -1.3181363344192505, 1.836728572845459]
Logits stats: mean=-0.079689, std=1.348791

=== Python Final Results ===
  Bacterial_spot: -0.331273
  Early_blight: -1.035679
  Healthy: -1.991290
  Late_blight: -0.469414
  Leaf_mold: 0.815356
  Septoria_leaf_spot: 0.834237
  Spider_mites: 1.884708
  Target_spot: -1.022126
  Tomato_mosaic_virus: -1.318136
  Yellow_leaf_curl_virus: 1.836729

üå± PYTHON DIAGNOSIS RESULT üå±
Predicted Disease: Spider_mites
Confidence Score: 1.884708
